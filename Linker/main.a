;/*****************************************************
;Chip type               : ATmega32
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <sleep.h>
;
;int i=0;
;bit g=0;
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0012    PORTB.0=~PORTB.0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0013 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;
;// Timer1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0017 {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0018     PORTB.0=~PORTB.0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0019     i++;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001A     if(i==5)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001B     {
; 0000 001C         if(!g)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001D         {
; 0000 001E              OCR1A++;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001F         }
; 0000 0020         else
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0021         {
; 0000 0022              OCR1A--;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0023         }
;PCODE: $00000039 VOL: 0
; 0000 0024         if(OCR1A==1000)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0025         {
; 0000 0026              g=1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0027         }
; 0000 0028         if(OCR1A==1)
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0029         {
; 0000 002A              g=0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002B         }
; 0000 002C         i=0;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002D     }
; 0000 002E }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;
;void main(void)
; 0000 0031 {
;PCODE: $0000004D VOL: 0
; 0000 0032 PORTB=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0033 DDRB=0x01;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0034 
; 0000 0035 PORTD=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0036 DDRD=0x20;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0037 
; 0000 0038 // Timer/Counter 1 initialization
; 0000 0039 // Clock value: 7.813 kHz
; 0000 003A // Mode: Fast PWM top=0x03FF
; 0000 003B // Timer1 Overflow Interrupt: On
; 0000 003C // Compare A Match Interrupt: On
; 0000 003D TCCR1A=0xC3;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003E TCCR1B=0x09;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003F TCNT1H=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0040 TCNT1L=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0041 ICR1H=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0042 ICR1L=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0043 OCR1AH=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0044 OCR1AL=0x3F;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0045 OCR1BH=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0046 OCR1BL=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0047 
; 0000 0048 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0049 TIMSK=0x14;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004A 
; 0000 004B // Global enable interrupts
; 0000 004C #asm("sei")
;PCODE: $0000006C VOL: 0
	sei
;PCODE: $0000006D VOL: 0
; 0000 004D 
; 0000 004E sleep_enable();
;PCODE: $0000006E VOL: 0
; 0000 004F 
; 0000 0050 while (1)
;PCODE: $0000006F VOL: 0
; 0000 0051       {
; 0000 0052          idle();
;PCODE: $00000070 VOL: 0
; 0000 0053       }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0054 }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
